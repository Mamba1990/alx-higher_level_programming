# 3-say_my_name.txt

***************************
How to Use 3-say_my_name.py
***************************

This modules defines a function ``say_my_name(first_name, last_name="")``.

Usage
*****

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Keanu", "Reeves")
    My name is Keanu Reeves

::

    >>> say_my_name("Donald", "Trump")
    My name is Cornelius Maxwell Jones II

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Keanu")
    My name is Keanu

Invalid Names
*************

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(1, "Novak")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Curry", ["warrios", "Raptors", "Lakers"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Curry": 30, "Steph": 5}, 0.9)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
